<%- include("../../views/partials/admin/header") %>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <link rel="stylesheet" href="/css/category.css"/>
</head>
<body>
    <section class="content-main">
      <div class="content-header">
        <div>
          <h2 class="content-title card-title">Category</h2>
        </div>
      </div>
      <header class="card-header text-center mb-20">
        <form action="/admin/category/" method="get" class="d-inline">
          <div class="input-group input-group-sm border border-1 border-grey rounded-pill" style="width: 500px; margin-left: 230px">
            <input type="text" class="form-control border-0 rounded-pill mt-3" placeholder="Search categories" name="search"/>
            <button class="btn" type="submit">Search</button>
          </div>
        </form>
      </header>
      
      <div class="card">
        <div class="card-body">
            <div class="row">
                <!-- Category Form -->
                <div class="col-md-3">
                    <h3 class="add-category-title" style="text-align: center; margin-bottom: 15px;">Add Category</h3>
                    <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
                        <label for="product_name">Name</label>
                        <input type="text" name="name" id="product_name" class="form-control" required />
                        <div id="product_name-error" class="error-message" style="color:red;"></div>
    
                        <label for="descriptionId">Description</label>
                        <textarea name="description" id="descriptionId" class="form-control" required></textarea>
                        <div id="descriptionId-error" class="error-message" style="color:red;"></div>
    
                        <button type="submit" class="btn btn-primary">Add Category</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    
  
            <!-- Category Table -->
            <div class="col-md-9">
              <h3 class="text-center mt-3 mb-3">Category List</h3> <!-- Table Heading -->
              <div class="table-responsive">
                <table class="table table-hover">
                  <thead>
                    <tr>
                      <th>Name</th>
                      <th>Description</th>
                      <th>Actions</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% if (cat.length > 0) { %>
                      <% cat.forEach(category => { %>
                        <tr>
                          <td class="text-start"><%= category.name %></td>
                          <td class="text-start"><%= category.description %></td>
                          <td class="text-start">
                            <a href="/admin/editCategory?id=<%= category._id %>" class="btn btn-info text-white">Edit</a>
                            <button class="btn btn-danger text-white" onclick="confirmDelete('<%= category._id %>')">Delete</button>
                          </td>
                        </tr>
                      <% }) %>
                    <% } else { %>
                      <tr>
                        <td colspan="3" class="text-center">No categories found</td>
                      </tr>
                    <% } %>
                  </tbody>
                </table>
              </div>
            </div> <!-- End of Category Table -->
          </div> <!-- End of Row -->
        </div>
      </div>
  
      <!-- Pagination -->
      <div class="pagination-container">
        <% if (currentPage > 1) { %>
        <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
        <% } %> 
        <% for (let i = 1; i <= totalPages; i++) { %> 
          <% if (i === currentPage) { %>
            <span class="current-page"><%= i %></span>
          <% } else { %>
            <a href="?page=<%= i %>"><%= i %></a>
          <% } %> 
        <% } %> 
        <% if (currentPage < totalPages) { %>
          <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
        <% } %>
      </div>
  
    </section>
  
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

  <script>
    async function handleFormSubmit(event) {
        event.preventDefault(); 

        let isValid = true;

        const nameInput = document.getElementById("product_name");
        const descriptionInput = document.getElementById("descriptionId");

        clearErrorMessage(nameInput);
        clearErrorMessage(descriptionInput);

        const namePattern = /^[A-Za-z\s]+$/;
        if (nameInput.value.trim() === "") {
            displayErrorMessage(nameInput, "Category name is required.");
            isValid = false;
        } else if (!namePattern.test(nameInput.value.trim())) {
            displayErrorMessage(nameInput, "Category name can only contain alphabets.");
            isValid = false;
        }

        if (descriptionInput.value.trim() === "") {
            displayErrorMessage(descriptionInput, "Description is required.");
            isValid = false;
        }

        if (!isValid) return false; 
const formData = {
            name: nameInput.value.trim(),
            description: descriptionInput.value.trim()
        };

        try {
            const response = await fetch("/admin/addCategory", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(formData)
            });

            const result = await response.json();

            if (response.ok) {
                Swal.fire({
                    icon: "success",
                    title: "Success!",
                    text: result.message || "Category added successfully!",
                    allowOutsideClick: false
                }).then(() => {
                    window.location.reload(); 
                });

            } else if (response.status === 400) {
                displayErrorMessage(nameInput, result.error || "Category already exists.");
            } else {
                Swal.fire({
                    icon: "error",
                    title: "Error!",
                    text: "Failed to add category.",
                });
            }
        } catch (error) {
            console.error("Error submitting form:", error);
            Swal.fire({
                icon: "error",
                title: "Error!",
                text: "Something went wrong. Please try again.",
            });
        }

        return false; 
    }
   
    function confirmDelete(categoryId) {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/admin/deleteCategory/${categoryId}`, {
                    method: "DELETE",
                    headers: {
                        "Content-Type": "application/json"
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire("Deleted!", "The category has been deleted.", "success")
                        .then(() => {
                            window.location.reload(); // Reload page to update category list
                        });
                    } else {
                        Swal.fire("Error!", data.error, "error");
                    }
                })
                .catch(error => {
                    Swal.fire("Error!", "Something went wrong.", "error");
                });
            }
        });
    }



    function displayErrorMessage(inputElement, message) {
        const errorElement = document.getElementById(inputElement.id + "-error");
        errorElement.textContent = message;
        errorElement.style.display = "block";
    }

    function clearErrorMessage(inputElement) {
        const errorElement = document.getElementById(inputElement.id + "-error");
        errorElement.textContent = "";
        errorElement.style.display = "none";
    }
  </script>

  <%- include("../../views/partials/admin/footer") %>
