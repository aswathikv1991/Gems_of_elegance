<%- include("../../views/partials/admin/header") %>

<link rel="stylesheet" href="/css/coupon.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<div class="container">
    <h2>Edit Coupon</h2>

    <form id="couponForm" action="/admin/editcoupon/<%= coupon._id %>" method="POST" onsubmit="return validateCouponForm()">
        <div class="form-group">
            <label for="code">Coupon Code:</label>
            <input type="text" id="code" name="code" value="<%= coupon.code %>" required>
        </div>

        <div class="form-group">
            <label for="discountType">Discount Type:</label>
            <select id="discountType" name="discountType" required>
                <option value="percentage" <%= coupon.discountType === "percentage" ? "selected" : "" %>>Percentage</option>
                <option value="fixed" <%= coupon.discountType === "fixed" ? "selected" : "" %>>Fixed Amount</option>
            </select>
        </div>

        <div class="form-group">
            <label for="discountValue">Discount Value:</label>
            <input type="number" id="discountValue" name="discountValue" min="1" value="<%= coupon.discountValue %>" required>
        </div>

        <div class="form-group">
            <label for="appliesTo">Applies To:</label>
            <select id="appliesTo" name="appliesTo" required onchange="toggleCategoryField()">
                <option value="cart" <%= coupon.appliesTo === "cart" ? "selected" : "" %>>Entire Cart</option>
                <option value="category" <%= coupon.appliesTo === "category" ? "selected" : "" %>>Specific Category</option>
            </select>
        </div>

        <div class="form-group" id="categorySelect" style="display: none;">
            <label for="category" id="categoryLabel">Select Category:</label>
            <select id="category" name="category">
                <% categories.forEach(category => { %>
                    <option value="<%= category._id %>" <%= coupon.category && coupon.category._id.toString() === category._id.toString() ? "selected" : "" %>>
                        <%= category.name %>
                    </option>
                <% }); %>
            </select>
        </div>

        <div class="form-group">
            <label for="minPurchase">Minimum Purchase (optional):</label>
            <input type="number" id="minPurchase" name="minPurchase" min="0" value="<%= coupon.minPurchase || '' %>">
        </div>

        <div class="form-group">
            <label for="maxDiscount">Maximum Discount (optional):</label>
            <input type="number" id="maxDiscount" name="maxDiscount" min="0" value="<%= coupon.maxDiscount || '' %>">
        </div>

        <div class="form-group">
            <label for="expiryDate">Expiry Date:</label>
            <input type="date" id="expiryDate" name="expiryDate" value="<%= coupon.expiryDate.toISOString().split('T')[0] %>" required>
        </div>

        <div class="form-group">
            <label for="usageLimit">Usage Limit (optional):</label>
            <input type="number" id="usageLimit" name="usageLimit" min="1" value="<%= coupon.usageLimit || '' %>">
        </div>

        <div style="display: flex; justify-content: space-between; gap: 10px;">
            <button type="submit" class="btn btn-primary" style="flex: 1;">Update Coupon</button>
            <a href="/admin/coupons" class="btn btn-danger" style="flex: 1; text-align: center;">Exit</a>
        </div>
    </form>
</div>

<script>
   document.addEventListener("DOMContentLoaded", function () {
    // Coupon success/error alert logic
    const urlParams = new URLSearchParams(window.location.search);
    
    if (urlParams.get("success") === "true") {
        Swal.fire({
            title: "Coupon Updated!",
            text: "The coupon has been successfully updated.",
            icon: "success",
            confirmButtonText: "OK"
        }).then(() => {
            window.history.replaceState(null, "", window.location.pathname);
            window.location.href = "/admin/coupons"; // Redirect to the coupon list page
        });
    } else if (urlParams.get("error") === "true") {
        Swal.fire({
            title: "Error!",
            text: "Something went wrong. Please try again.",
            icon: "error",
            confirmButtonText: "OK"
        }).then(() => {
            window.history.replaceState(null, "", window.location.pathname);
        });
    }

    // Category dropdown toggle logic
    toggleCategoryField();
    document.getElementById("appliesTo").addEventListener("change", toggleCategoryField);

    function toggleCategoryField() {
        let appliesTo = document.getElementById("appliesTo").value;
        let categoryField = document.getElementById("categorySelect");

        if (appliesTo === "category") {
            categoryField.style.display = "block";
            document.getElementById("category").setAttribute("required", "true");
        } else {
            categoryField.style.display = "none";
            document.getElementById("category").removeAttribute("required");
            document.getElementById("category").value = "";
        }
    }
});

    function validateCouponForm() {
        let code = document.getElementById("code").value.trim();
        let discountValue = parseFloat(document.getElementById("discountValue").value);
        let expiryDate = document.getElementById("expiryDate").value;
        let minPurchase = document.getElementById("minPurchase").value.trim();
        let maxDiscount = document.getElementById("maxDiscount").value.trim();
        let today = new Date().toISOString().split("T")[0];

        if (code === "") {
            Swal.fire("Error", "Coupon code is required!", "error");
            return false;
        }
        if (isNaN(discountValue) || discountValue <= 0) {
            Swal.fire("Error", "Discount value must be a positive number!", "error");
            return false;
        }
        if (new Date(expiryDate) < new Date(today)) {
            Swal.fire("Error", "Expiry date cannot be in the past!", "error");
            return false;
        }
        if (minPurchase !== "" && parseFloat(minPurchase) < 0) {
            Swal.fire("Error", "Minimum purchase must be a positive number!", "error");
            return false;
        }
        if (maxDiscount !== "" && parseFloat(maxDiscount) < 0) {
            Swal.fire("Error", "Maximum discount must be a positive number!", "error");
            return false;
        }

        return true;
    }
</script>
