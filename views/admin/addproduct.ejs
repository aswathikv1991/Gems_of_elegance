<%- include("../../views/partials/admin/header") %>
<link href="/css/addproduct.css" rel="stylesheet" type="text/css">
<!-- Include Cropper.js CSS & JS -->
<!-- CropperJS CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
<!-- CropperJS JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<div class="add-product-container">
  <div class="container mt-5">
    <h2 class="text-center mb-4">Add New Product</h2>
    <form id="addProductForm" action="/admin/products/add" method="POST" enctype="multipart/form-data" class="p-4 bg-light shadow rounded">
      <div class="mb-3">
        <label for="productName" class="form-label">Product Name</label>
        <input type="text" name="name" class="form-control" required>
      </div>
      <div class="mb-3">
        <label for="categoryId" class="form-label">Category</label>
        <select name="categoryId" class="form-control" required>
          <option value="" disabled selected>Select Category</option>
          <% categories.forEach(category => { %>
            <option value="<%= category._id %>"><%= category.name %></option>
          <% }) %>
        </select>
      </div>
      <div class="mb-3">
        <label for="material" class="form-label">Material</label>
        <input type="text" name="material" class="form-control" required>
      </div>
      <div class="mb-3">
        <label for="color" class="form-label">Color</label>
        <input type="text" name="color" class="form-control" required>
      </div>
      <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <textarea name="description" class="form-control" rows="3" required></textarea>
      </div>
      <div class="mb-3">
        <label for="price" class="form-label">Price</label>
        <input type="number" name="price" class="form-control" required min="1">
      </div>
      <div class="mb-3">
        <label for="sku" class="form-label">SKU</label>
        <input type="text" name="sku" class="form-control" required>
      </div>
      <div class="mb-3">
        <label for="quantity" class="form-label">Quantity</label>
        <input type="number" name="quantity" class="form-control" required min="1">
      </div>
      <div class="mb-3">
        <label for="images" class="form-label">Product Images (Upload up to 3)</label>
        <input type="file" id="imageInput" name="images" class="form-control" multiple required accept="image/*">
      </div>
      <button type="submit" class="btn btn-primary w-100">Add Product</button>
    </form>
  </div>
</div>

<!-- Cropping Modal -->
<!-- Cropping Modal -->
<div id="cropModal">
    <div class="crop-container">
      <h4>Crop and Resize Image</h4>
      <div class="cropper-wrapper">
        <img id="cropImage">
      </div>
      <div class="modal-buttons">
        <button id="cropBtn" class="btn btn-primary">Crop & Save</button>
        <button id="cancelCropBtn" class="btn btn-secondary">Skip</button>
      </div>
    </div>
  </div>
  

<script>
document.addEventListener("DOMContentLoaded", function () {
  let cropper;
  const cropModal = document.getElementById("cropModal");
  const cropImage = document.getElementById("cropImage");
  const fileInput = document.getElementById("imageInput");

  let filesToProcess = [];
  let croppedFiles = [];
  let currentFileIndex = 0;

  fileInput.addEventListener("change", function(event) {
    if (fileInput.files.length > 3) {
      alert("You can only upload up to 3 images.");
      fileInput.value = ""; // Reset file input
      return;
    }

    filesToProcess = Array.from(fileInput.files);
    croppedFiles = [];
    currentFileIndex = 0;
    if (filesToProcess.length > 0) {
      processNextFile();
    }
  });

  function processNextFile() {
  if (currentFileIndex < filesToProcess.length) {
    const file = filesToProcess[currentFileIndex];
    const objectUrl = URL.createObjectURL(file);
    cropImage.src = objectUrl;
    cropModal.style.display = "flex";

    cropImage.onload = function () {
      if (cropper) {
        cropper.destroy();
      }
      cropper = new Cropper(cropImage, {
        aspectRatio: 1,
        viewMode: 1,
      });
    };
  } else {
    const dataTransfer = new DataTransfer();
    croppedFiles.forEach(file => dataTransfer.items.add(file));
    fileInput.files = dataTransfer.files;
  }
}

document.getElementById("cropBtn").addEventListener("click", function () {
  if (!cropper || !cropImage.complete || cropImage.naturalWidth === 0) {
    console.log("Cropper status:", cropper);
    console.log("Image complete:", cropImage.complete);
    console.log("Image natural width:", cropImage.naturalWidth);
    alert("Please wait for the image to load before cropping.");
    return;
  }
  //const canvas = cropper.getCroppedCanvas({ width: 1000, height: 1000 });
  const canvas = cropper.getCroppedCanvas();

  //const canvas = cropper.getCroppedCanvas({ width: 500, height: 500 });
  canvas.toBlob(function (blob) {
    if (!blob) {
      alert("Something went wrong with cropping.");
      return;
    }
    const croppedFile = new File([blob], "cropped_" + Date.now() + ".png", { type: "image/png" });
    croppedFiles.push(croppedFile);
    cropper.destroy();
    cropper = null;
    currentFileIndex++;

    if (currentFileIndex < filesToProcess.length) {
      processNextFile();
    } else {
      cropModal.style.display = "none";
    }
  }, "image/png");
});

  document.getElementById("cancelCropBtn").addEventListener("click", function () {
    croppedFiles.push(filesToProcess[currentFileIndex]);
    currentFileIndex++;

    if (currentFileIndex < filesToProcess.length) {
      processNextFile();
    } else {
      cropModal.style.display = "none";
    }
  });
});
</script>

<%- include("../../views/partials/admin/footer") %>
